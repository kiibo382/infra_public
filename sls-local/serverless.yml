service: ${env:SERVICE_NAME}

frameworkVersion: "2"
useDotenv: true

plugins:
  - serverless-offline
  - serverless-s3-local
  - serverless-apigw-binary

provider:
  name: aws
  runtime: python3.8
  stage: ${env:STAGE}
  region: ${env:REGION}
  profile: ${env:PROFILE}
  environment:
    RECORDS_BUCKET_NAME1: ${env:RECORDS_BUCKET_NAME1}
    RECORDS_BUCKET_NAME2: ${env:RECORDS_BUCKET_NAME2}
    TRANSCRIBE_BUCKET_NAME: ${self:service}-${opt:stage, self:provider.stage}-transcribe-bucket
    COMPREHEND_BUCKET_NAME: ${self:service}-${opt:stage, self:provider.stage}-comprehend-bucket
  apiGateway:
    shouldStartNameWithService: true
  lambdaHashingVersion: 20201221
  logRetentionInDays: 30
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
          Resource:
            - "arn:aws:s3:::${env:RECORDS_BUCKET_NAME1}/*"
            - "arn:aws:s3:::${env:RECORDS_BUCKET_NAME2}/*"
            - "arn:aws:s3:::${self:provider.environment.TRANSCRIBE_BUCKET_NAME}/*"
            - "arn:aws:s3:::${self:provider.environment.COMPREHEND_BUCKET_NAME}/*"
        - Effect: Allow
          Action:
            - transcribe:StartTranscriptionJob
          Resource: "*"
        - Effect: Allow
          Action:
            - "comprehend:*"
          Resource:
            - "*"

custom:
  apigwBinary:
    types:
      - "*/*"
  authorizer:
    name: authorization
    type: "TOKEN"
    identitySource: method.request.header.Authorization
    resultTtlInSeconds: 0

package:
  include:
    - src/*
  exclude:
    - node_modules
    - "*.sh"
    - "*.dio"
    - "*.json"

functions:
  transcribe1:
    handler: src/transcribe.handler
    memorySize: 512
    events:
      - s3:
          bucket: ${env:RECORDS_BUCKET_NAME1}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .wav
  transcribe2:
    handler: src/transcribe.handler
    memorySize: 512
    events:
      - s3:
          bucket: ${env:RECORDS_BUCKET_NAME2}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .wav
  comprehend:
    handler: src/comprehend.handler
    memorySize: 512
    events:
      - s3:
          bucket: ${self:provider.environment.TRANSCRIBE_BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - suffix: -transcribe.json
  results:
    handler: src/results.get
    memorySize: 512
    events:
      - http:
          path: results/{records_bucket}/{proxy+}
          method: get
          request:
            parameters:
              paths:
                records_bucket: true
          authorizer: ${self:custom.authorizer}

  records-get:
    handler: src/records.get
    memorySize: 512
    events:
      - http:
          path: records/{records_bucket}/{proxy+}
          method: get
          authorizer: ${self:custom.authorizer}

  authorization:
    handler: src/auth.authorization

resources:
  Resources:
    S3ComprehendBucket:
      Type: "AWS::S3::Bucket"
      Properties:
        BucketName: ${self:provider.environment.COMPREHEND_BUCKET_NAME}
