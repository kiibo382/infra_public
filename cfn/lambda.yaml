---
AWSTemplateFormatVersion: '2010-09-09'

Resources:
  TranscribeRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: kizawa-transcribe-function-role
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                  - 'transcribe:*'
                Resource: '*'
  TranscribeFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import datetime
          import os
          import urllib.parse

          import boto3

          s3 = boto3.client("s3")
          transcribe = boto3.client("transcribe")


          def lambda_handler(event, context):
              bucket = event["Records"][0]["s3"]["bucket"]["name"]
              key = urllib.parse.unquote_plus(
                  event["Records"][0]["s3"]["object"]["key"], encoding="utf-8"
              )

              try:
                  transcribe.start_transcription_job(
                      TranscriptionJobName=datetime.datetime.now().strftime("%Y%m%d%H%M%S")
                      + "_Transcription",
                      LanguageCode="ja-JP",
                      Media={
                          "MediaFileUri": "https://s3.ap-northeast-1.amazonaws.com/"
                          + bucket
                          + "/"
                          + key
                      },
                      OutputBucketName=os.environ("TRANSCRIBE_BUCKET"),
                  )
              except Exception as e:
                  print(e)
                  print("Error transcribe object {} in bucket {}".format(key, bucket))
                  raise e

      FunctionName: kizawa-transcribe-function
      Description: Transcribe call recording.
      Handler: index.lambda_handler
      MemorySize: 128
      Role: !GetAtt [ TranscribeRole, Arn ]
      Runtime: python3.7
      Timeout: 60

  ComprehendRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: kizawa-comprehend-function-role
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                  - 'comprehend:*'
                Resource: '*'
  ComprehendFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import datetime
          import json
          import os
          import urllib.parse

          import boto3

          s3 = boto3.client("s3")
          comprehend = boto3.client("comprehend")


          def lambda_handler(event, context):
              transcribe_bucket = event["Records"][0]["s3"]["bucket"]["name"]
              input_key = urllib.parse.unquote_plus(
                  event["Records"][0]["s3"]["object"]["key"], encoding="utf-8"
              )

              try:
                  response = s3.get_object(Bucket=transcribe_bucket, Key=input_key)

                  body = json.load(response["Body"])
                  transcript = body["results"]["transcripts"][0]["transcript"]

                  sentiment_response = comprehend.detect_sentiment(
                      Text=transcript, LanguageCode="ja"
                  )
                  key_phrases = comprehend.detect_key_phrases(Text=transcript, LanguageCode="ja")
              except Exception as e:
                  print(e)
                  print(
                      "Error comprehend object {} in bucket {}".format(
                          input_key, transcribe_bucket
                      )
                  )
                  raise e

              comprehend_bucket = os.environ("COMPREHEND_BUCKET")
              output_key = datetime.datetime.now().strftime("%Y%m%d%H%M%S") + ".json"
              res_dict = {
                  "Sentiment": sentiment_response["Sentiment"],
                  "SentimentScore": sentiment_response["SentimentScore"],
                  "KeyPhrases": key_phrases["KeyPhreses"],
              }

              try:
                  upload_response = s3.put_object(
                      Body=json.dumps(res_dict),
                      Bucket=comprehend_bucket,
                      Key=output_key,
                  )
                  print(upload_response)
              except Exception as e:
                  print(e)
                  print("Error upload comprehend data into s3 bucket.")
                  raise e

      FunctionName: kizawa-comprehend-function
      Description: Comprehend Text.
      Handler: index.lambda_handler
      MemorySize: 128
      Role: !GetAtt [ ComprehendRole, Arn ]
      Runtime: python3.7
      Timeout: 60
