---
AWSTemplateFormatVersion: 2010-09-09


Parameters:
  Cluster:
    Type: String

  DesiredCount:
    Type: Number
    Default: 3

  LaunchType:
    Type: String
    Default: Fargate
    AllowedValues:
      - Fargate
      - EC2

  TargetGroup:
    Type: String

  SourceSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>


Conditions:
  Fargate: !Equals [ !Ref LaunchType, "Fargate" ]

  EC2: !Equals [ !Ref LaunchType, "EC2" ]


Resources:
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/${AWS::StackName}
      RetentionInDays: 14

  FargateService:
    Type: AWS::ECS::Service
    Condition: Fargate
    Properties:
      Cluster: !Ref Cluster
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref SourceSecurityGroup
          Subnets: !Ref Subnets
      LoadBalancers:
        - ContainerName: rabbit
          ContainerPort: 5672
          TargetGroupArn: !Ref TargetGroup

  EC2Service:
    Type: AWS::ECS::Service
    Condition: EC2
    Properties:
      Cluster: !Ref Cluster
      LaunchType: EC2
      DesiredCount: 3
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 66
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: rabbit
          ContainerPort: 5672
          TargetGroupArn: !Ref TargetGroup

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref 'AWS::StackName'
      RequiresCompatibilities:
        - !If [ Fargate, "FARGATE", "EC2" ]
      Volumes:
        - Host:
            SourcePath: /var/lib/rabbitmq-asg-autocluster
          Name: rabbitmq-database
      # important for rabbit node discovery as containers inherit the host's hostname that is in DNS 
      Memory: 512
      Cpu: 256
      NetworkMode: 'host'
      ExecutionRoleArn: !Ref TaskExecutionRole
      ContainerDefinitions:
        - Name: rabbit
          Image: 248968340359.dkr.ecr.ap-northeast-1.amazonaws.com/arnaud:latest
          MountPoints:
            - SourceVolume: rabbitmq-database
              ContainerPath: /var/lib/rabbitmq
          Memory: 256
          # MemoryReservation: !Ref 'RabbitSoftMemoryLimit'
          PortMappings:
            - HostPort: 5672
              ContainerPort: 5672
              Protocol: tcp
            - HostPort: 15672
              ContainerPort: 15672
              Protocol: tcp
            - HostPort: 4369
              ContainerPort: 4369
              Protocol: tcp
            - HostPort: 25672
              ContainerPort: 25672
              Protocol: tcp
          Environment:
            - Name: RABBITMQ_DEFAULT_VHOST
              Value: /
            - Name: RABBITMQ_DEFAULT_USER
              Value: admin
            - Name: RABBITMQ_DEFAULT_PASS
              Value: admin
            - Name: RABBITMQ_DEFAULT_PORT
              Value: 5672
            - Name: RABBITMQ_VM_MEMORY_HIGH_WATERMARK
              Value: 0.85
            - Name: AWS_DEFAULT_REGION
              Value: !Ref 'AWS::Region'
            - Name: AWS_ASG_AUTOCLUSTER
              Value: 'true'
            # using a random erlang cookie
            - Name: RABBITMQ_ERLANG_COOKIE
              Value: 'ALWEDHDBZTQYWTJGTXWV'
            - Name: RABBITMQ_QUEUE_MASTER_LOCATOR
              Value: min-masters
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref AWS::StackName
          ReadonlyRootFilesystem: 'false'
          Privileged: 'true'
          Ulimits:
            - Name: nofile
              SoftLimit: 10240
              HardLimit: 32768


Outputs:
  Service:
    Value: !If [ Fargate, !Ref FargateService, !Ref EC2Service ]