---
AWSTemplateFormatVersion: 2010-09-09


Parameters:
  CodeCommitRepositoryName:
    Type: String

  Cluster:
    Type: String

  Service:
    Type: String

  Repository:
    Type: String
    Description: ECR Repository Name


Resources:
  Repository:
    Type: AWS::ECR::Repository
    DeletionPolicy: Retain

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
                  - secretsmanager:GetSecretValue
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
              - Resource: !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${Repository}
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - iam:PassRole

  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - cd ${CODEBUILD_SRC_DIR}/ct3invoice.batch/ct3invoice.batch/node/
                - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
                - . ~/.nvm/nvm.sh
                - nvm install v6.1.0
                - node -e "console.log('Running Node.js ' + process.version)"
                - npm install
                - $(aws ecr get-login --no-include-email)
                - TAG="$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
                - IMAGE_URI="${REPOSITORY_URI}:${TAG}"
                - cd ..
                - cat composer.json
                - curl -s http://getcomposer.org/installer | php
                - php composer.phar install --no-dev
                - ls -l vendor
            build:
              commands:
                - cd ${CODEBUILD_SRC_DIR}/ct3invoice.batch/codedeploy/cloudwatchagent
                - sed -e "s/StageName/${ENV}/g" config.json.org > config.json
                - cd 
            post_build:
              commands:
                - cd ${CODEBUILD_SRC_DIR}
                - mkdir export
                - cp -r ct3invoice.batch/ct3invoice.batch/ export/
                - cp -ap ct3invoice.batch/app.config/php/${ENV}_ct3.app.config export/ct3invoice.batch/conf/ct3.app.config
                - cp -ap ct3invoice.batch/app.config/php/${ENV}_ct3.invoice.config export/ct3invoice.batch/conf/ct3.invoice.config
                - cp -ap ct3invoice.batch/app.config/node/${ENV}_app.config.yaml export/ct3invoice.batch/node/.app.config.yaml
                - cp -ap ct3invoice.batch/codedeploy/cloudwatchagent/config.json export/config.json
                - cp -ap ct3invoice.batch/codedeploy/appspec/kizawa/* export/
          artifacts:
            base-directory: ${CODEBUILD_SRC_DIR}/export
            files:
              - ./**/*
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:17.09.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: ENV
            Value: prd
      Name: !Ref AWS::StackName
      ServiceRole: !Ref CodeBuildServiceRole


  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              Configuration:
                RepositoryName: !Ref CodeCommitRepositoryName
                BranchName: develop
              RunOrder: 1
              OutputArtifacts:
                - Name: App
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
              Configuration:
                ClusterName: !Ref Cluster
                ServiceName: !Ref Service
                FileName: images.json
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1


version: 0.0
os: linux
files:
  - source: sample.jar
    destination: /var/app
hooks:
  ApplicationStart:
    - location: start.sh


Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}


version: 0.0
os: linux
files:
  - source: /ct3invoice.batch
    destination: /home/ct3/
  - source: /config.json
    destination: /opt/aws/amazon-cloudwatch-agent/bin/
hooks:
  ApplicationStart:
    - location: start.sh


version: 0.0
os: linux
files:
  - source: ct3invoice.batch
    destination: /home/ct3/ct3invoice.batch/
  - source: config.json
    destination: /opt/aws/amazon-cloudwatch-agent/bin/
hooks:
  BeforeInstall:
    - location: before.sh
      timeout: 300
      runas: root
  AfterInstall:
    - location: after.sh
      timeout: 300
      runas: root

before.sh
#!/bin/bash

## デプロイ対象ファイル事前削除
rm -rf /home/ct3/ct3invoice.batch
rm -rf /opt/aws/amazon-cloudwatch-agent/bin/config.json

service docker start
docker run --privileged -v /home/ct3/ct3invoice.batch:/home/ct3/ct3invoice.batch -v /var/log/ct3/ct3invoice.batch:/var/log/ct3/ct3invoice.batch -it ct3invoicebatch/php5.4.45 /bin/bash
​
cd /home/ct3/ct3invoice.batch
cat composer.json
curl -s http://getcomposer.org/installer | php
php composer.phar install --no-dev
ls -l vendor


after.sh
#!/bin/bash

chmod 755 /home/ct3/ct3invoice.batch/*.sh




EnvironmentVariables:
  - Name: AWS_DEFAULT_REGION
    Value: !Ref AWS::Region
  - Name: ENV
    Value: dev
  - Name: IMAGE_URI
    Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}