---
AWSTemplateFormatVersion: 2010-09-09


Description: >
  This template shows how to use AWS CodePipeline and AWS CodeBuild to build an
  automated continuous deployment pipeline to Amazon Elastic Container Service
  (Amazon ECS) using clusters powered by AWS Fargate or Amazon Elastic Compute
  Cloud (Amazon EC2).


Parameters:
  LaunchType:
    Type: String
    Default: Fargate
    AllowedValues:
      - Fargate
      - EC2
    Description: >
      The launch type for your service. Selecting EC2 will create an Auto
      Scaling group of t2.micro instances for your cluster. See
      https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html
      to learn more about launch types.

  TemplateBucket:
    Type: String
    Default: cf-templates-1bplpkf62jjyg-ap-northeast-1
    Description: >
      The S3 bucket from which to fetch the templates used by this stack.
    
  CodeCommitRepositoryName:
    Type: String
    Default: kizawa-codecommit

  DesiredCount:
    Type: Number
    Default: 1
  
  VpcId:
    Type: String
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    Default: vpc-54049630

  SubnetId1:
    Type: String
    Description: SubnetId of an existing subnet in your Virtual Private Cloud (VPC)
    Default: subnet-51200527

  SubnetId2:
    Type: String
    Description: SubnetId of an existing subnet in your Virtual Private Cloud (VPC)
    Default: subnet-39650261
  
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: The EC2 Key Pair to allow SSH access to the instance

Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      CodeCommitRepositoryName:
        default: "CodeCommitRepositoryName"
      LaunchType:
        default: "Launch Type"
    ParameterGroups:
      - Label:
          default: Cluster Configuration
        Parameters:
          - LaunchType
      - Label:
          default: CodeCommit Configuration
        Parameters:
          - CodeCommitRepositoryName
      - Label:
          default: Stack Configuration
        Parameters:
          - TemplateBucket
      - Label:
          default: TaskDesiredCount
        Parameters:
          - DesiredCount
      - Label:
          default: VPC
        Parameters:
          - VpcId
          - SubnetId1
          - SubnetId2

Resources:
  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Sub ${AWS::StackName}-ecs-ec2
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: tcp
          FromPort: 5672
          ToPort: 5672
        - CidrIp: "0.0.0.0/0"
          IpProtocol: tcp
          FromPort: 15672
          ToPort: 15672
        - CidrIp: "0.0.0.0/0"
          IpProtocol: tcp
          FromPort: 25672
          ToPort: 25672
        - CidrIp: "0.0.0.0/0"
          IpProtocol: tcp
          FromPort: 4369
          ToPort: 4369
        - CidrIp: "0.0.0.0/0"
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
      VpcId: !Ref VpcId

  Cluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/ecs-cluster.yaml"
      Parameters:
        LaunchType: !Ref LaunchType
        SourceSecurityGroup: !Ref SecurityGroup
        Subnet1: !Ref SubnetId1
        Subnet2: !Ref SubnetId2
        VpcId: !Ref VpcId
        KeyName: !Ref KeyName

  DeploymentPipeline:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/deployment-pipeline.yaml"
      Parameters:
        Cluster: !GetAtt Cluster.Outputs.ClusterName
        Service: !GetAtt Service.Outputs.Service
        Service2: !GetAtt Service.Outputs.Service2
        CodeCommitRepositoryName: !Ref CodeCommitRepositoryName

  Service:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/service.yaml"
      Parameters:
        Cluster: !GetAtt Cluster.Outputs.ClusterName
        LaunchType: !Ref LaunchType
        SourceSecurityGroup: !Ref SecurityGroup
        Subnet1: !Ref SubnetId1
        Subnet2: !Ref SubnetId2
        DesiredCount: !Ref DesiredCount

Outputs:
  PipelineUrl:
    Description: The continuous deployment pipeline in the AWS Management Console.
    Value: !GetAtt DeploymentPipeline.Outputs.PipelineUrl
